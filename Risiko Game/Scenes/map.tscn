[gd_scene load_steps=8 format=3 uid="uid://bteu6rr1m2jya"]

[ext_resource type="Texture2D" uid="uid://c7kdkrqlypb8k" path="res://Assets/maps/mouse_map.png" id="1_prxjd"]
[ext_resource type="Script" path="res://Scripts/map.gd" id="2_wnghg"]
[ext_resource type="Script" path="res://Scripts/mouse_map.gd" id="3_6kylv"]
[ext_resource type="Texture2D" uid="uid://b0k6bh55hymx6" path="res://Assets/maps/debug_map.png" id="3_u7p1w"]
[ext_resource type="Texture2D" uid="uid://b2ymyq75gbxlc" path="res://Assets/maps/wasteland_map.png" id="5_vos11"]

[sub_resource type="Shader" id="Shader_tinas"]
code = "shader_type canvas_item;

uniform int num_of_provinces;
const int max_num_of_provinces = 100;
uniform vec4 base_color : source_color;
uniform vec4 colors[max_num_of_provinces] : source_color;
const float EPSILON = 1.0/256.0;

void fragment() {
	COLOR = texture(TEXTURE, UV);
	// If COLOR is white, then make it transparent
	if(COLOR.r >= 0.999 && COLOR.g >= 0.999 && COLOR.b >= 0.9999) {
		COLOR = vec4(1.0,1.0,1.0,0.0);
	} else if(COLOR.g == 0.0 && COLOR.b == 0.0) {
		// Get the index of the color
		int idx = 0;
		float idx_f = 0.0;
		while(idx < num_of_provinces) {
			if(EPSILON >= abs(COLOR.r - base_color.r - idx_f/256.0))
				break;
			idx_f += 1.0;
			++idx;
		}
		// If the index is acceptable, then set it to its mapped color
		if(idx != num_of_provinces)
			COLOR = colors[idx];
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_diulb"]
shader = SubResource("Shader_tinas")
shader_parameter/num_of_provinces = null
shader_parameter/base_color = null
shader_parameter/colors = null

[node name="Map" type="Node2D"]
script = ExtResource("2_wnghg")

[node name="MouseMap" type="Sprite2D" parent="."]
texture = ExtResource("1_prxjd")
centered = false
script = ExtResource("3_6kylv")

[node name="DebugMap" type="Sprite2D" parent="."]
visible = false
texture = ExtResource("3_u7p1w")
centered = false

[node name="WastelandMap" type="Sprite2D" parent="."]
texture = ExtResource("5_vos11")
centered = false

[node name="OverlayMap" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_diulb")
texture = ExtResource("1_prxjd")
centered = false

[node name="SoldierObjs" type="Node2D" parent="."]
